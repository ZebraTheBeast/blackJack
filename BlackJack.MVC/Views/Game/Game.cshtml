@model BlackJack.ViewModel.GameModel
@{
    var jsonModel = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model);
}
<h2 class="text-center">Game</h2>

<div class="container">
    <div class="row">
        <div class="col-md-3 text-center">
            <h2>
                <i class="fa fa-black-tie"></i>
            @Model.Players[0].Name
            </h2>
            <ul class="list-group">
                @foreach (var card in Model.Players[0].Hand.CardList)
                {
                    <li class="list-group-item">@card.Title of @card.Color</li>
                }
            </ul>
            <h4> Value: @Model.Players[0].Hand.CardListValue</h4>
        </div>
        <div id="GameStat" class="col-md-6 game-stat">
            @if (Model.GameStats != null)
            {
                foreach (var post in Model.GameStats)
                {
                    <p>@post</p>
                }
            }
        </div>
        <div class="col-md-3">
            <ul class="list-group">
                @for (var i = 1; i < Model.Players.Count; i++)
                {
                    <li class="list-group-item">@Model.Players[i].Name @Model.Players[i].Points</li>
                }
            </ul>
            <h3>Cards in deck: @Model.Deck.Count()</h3>
        </div>
    </div>
</div>
<div class="row text-center">
    <div class="col-md-12">
        <h1 class="alert alert-info">@Model.Options</h1>
    </div>
</div>
<div class="row text-center">
    @for (var i = 1; i < Model.Players.Count; i++)
    {
        <div class="col-md-2">
            <h3 class="text-center">
                @if (i == Model.Players.Count - 1)
                {
                    <i class="fa fa-user"></i>
                }
                @if(i != Model.Players.Count - 1)
                {
                    <i class="fa fa-desktop"></i>
                }
                @Model.Players[i].Name
            </h3>
            <ul class="list-group">
                @foreach (var card in Model.Players[i].Hand.CardList)
                {
                    <li class="list-group-item">@card.Title of @card.Color.ToString()</li>
                }
            </ul>
            <h4>Value: @Model.Players[i].Hand.CardListValue</h4>
        </div>
    }

    <input id="playerValue" type="hidden" value="@Model.Players[Model.Players.Count-1].Hand.CardListValue" />
    <input id="idButton" type="hidden" value="@Model.ButtonPushed" />
    <input id="playerPoints" type="hidden" value="@Model.Players[Model.Players.Count-1].Points" />

    <div class="col-md-4 ">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken();

            <input type="hidden" name="jsonModel" value="@jsonModel" />

            @Html.Hidden("playerId", Model.Players.Last().Id);

            <div class="row">
                <input id="drawButton" type="submit" value="Draw" class="custombutton btn btn-default" formaction="@Url.Action("Draw")" />
            </div>
            <div class="row">
                <input id="botTurnButton" type="submit" value="Stand" class="btn btn-default custombutton" formaction="@Url.Action("BotTurn")" />
            </div>
            <div class="row">
                <input type="range" id="betValue" class="custombutton custom-range" min="10" value="10" max="@Model.Players[Model.Players.Count-1].Points" oninput="placeBet()" step="10" name="pointsValue" />
            </div>
            <div class="row">
                <input type="number" id="imageBetValue" class="custombutton text-center" value="10" readonly="readonly" />
            </div>
            <div class="row">
                <input id="placeBetButton" type="submit" value="Place a bet" class="btn btn-default custombutton" formaction="@Url.Action("PlaceBet")" />
            </div>
            <div class="row">
                <input type="submit" value="Refresh game" class="btn btn-default custombutton" formaction="@Url.Action("RefreshGame")" />
            </div>
        }
    </div>
</div>
