{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app-routing.module.ts","webpack:///./src/app.component.html","webpack:///./src/app.component.ts","webpack:///./src/app.module.ts","webpack:///./src/environment.ts","webpack:///./src/game/game-routing.module.ts","webpack:///./src/game/game.component.html","webpack:///./src/game/game.component.ts","webpack:///./src/game/game.module.ts","webpack:///./src/game/game.service.ts","webpack:///./src/log/log-routing.module.ts","webpack:///./src/log/log.component.html","webpack:///./src/log/log.component.ts","webpack:///./src/log/log.module.ts","webpack:///./src/log/log.service.ts","webpack:///./src/login/login-routing.module.ts","webpack:///./src/login/login.component.html","webpack:///./src/login/login.component.ts","webpack:///./src/login/login.module.ts","webpack:///./src/login/login.service.ts","webpack:///./src/main.ts","webpack:///./src/message/message.component.html","webpack:///./src/message/message.component.ts","webpack:///./src/message/message.module.ts","webpack:///./src/message/message.service.ts","webpack:///./src/shared.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"src/game/game.module.ngfactory\": [\n\t\t\"./src/game/game.module.ngfactory.js\",\n\t\t\"src-game-game-module-ngfactory\"\n\t],\n\t\"src/log/log.module.ngfactory\": [\n\t\t\"./src/log/log.module.ngfactory.js\",\n\t\t\"src-log-log-module-ngfactory\"\n\t],\n\t\"src/login/login.module.ngfactory\": [\n\t\t\"./src/login/login.module.ngfactory.js\",\n\t\t\"src-login-login-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","﻿import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'game/:id', loadChildren: 'src/game/game.module#GameModule' },\r\n    { path: 'login', loadChildren: 'src/login/login.module#LoginModule' },\r\n    { path: 'log', loadChildren: 'src/log/log.module#LogModule' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","<div class=\"container\">\r\n    <div class=\"row text-center\">\r\n        <h1 class=\"m-auto\">Black Jack</h1>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<div class=\"container text-center fixed-bottom\">\r\n    <a routerLink=\"/log\">Logs</a>\r\n    <br />\r\n    <a routerLink=\"/login\">Login to game</a>\r\n</div>\r\n\r\n<app-error-message></app-error-message>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    styleUrls: ['/Content/bootstrap.css', '/Content/Site.css'],\r\n    templateUrl: '/src/app.component.html'\r\n})\r\n\r\nexport class AppComponent { }","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppComponent } from 'src/app.component';\r\n\r\nimport { AppRoutingModule } from 'src/app-routing.module';\r\nimport { GameModule } from 'src/game/game.module';\r\nimport { LogModule } from 'src/log/log.module';\r\nimport { LoginModule } from 'src/login/login.module';\r\nimport { MessageModule } from 'src/message/message.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        AppRoutingModule,\r\n        NgbModule.forRoot(),\r\n        BrowserAnimationsModule,\r\n        GameModule,\r\n        LogModule,\r\n        LoginModule,\r\n        MessageModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","﻿export const environment = {\r\n    gameUrl: \"/api/game/\",\r\n    loginUrl: \"/api/login/\",\r\n    logUrl: \"/api/log/\"\r\n}","﻿import { Routes, RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { GameComponent } from \"src/game/game.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GameComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class GameRoutingModule { }","<div class=\"container\" *ngIf=\"game\">\r\n    <div class=\"row m-b-10\">\r\n        <div class=\"col-md-3 text-center\">\r\n            <h2>\r\n                {{ game.dealer.name }}\r\n            </h2>\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item\" *ngFor=\"let card of game.dealer.hand.cardList\">\r\n                    {{ card.title }} of {{ card.color }}\r\n                </li>\r\n            </ul>\r\n            <h4 *ngIf=\"game.dealer.hand.cardListValue != 0\">Value: {{ game.dealer.hand.cardListValue }}</h4>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row text-center game-option\">\r\n                <h1 class='alert alert-info m-auto'>\r\n                    {{ game.options }}\r\n                </h1>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input type=\"submit\" value=\"Draw\" class=\"btn btn-outline-info custombutton\" [disabled]=\"isDrawDisabled\" (click)=\"draw()\" />\r\n            </div>\r\n            <div class=\"row\">\r\n                <input type=\"submit\" value=\"Stand\" class=\"btn btn-outline-info custombutton\" [disabled]=\"isDrawDisabled\" (click)=\"stand()\" />\r\n            </div>\r\n            <div class=\"row\">\r\n                <input type=\"range\" class=\"custombutton custom-range\" min=\"10\" [(ngModel)]=\"betValue\" [disabled]=\"isBetDisabled\" step=\"10\" max=\"{{ game.human.points }}\" />\r\n            </div>\r\n            <div class=\"row\">\r\n                <input type=\"number\" class=\"custombutton text-center form-control\" [value]=\"betValue\" [disabled]=\"isBetDisabled\" readonly=\"readonly\" />\r\n            </div>\r\n            <div class=\"row\">\r\n                <input type=\"submit\" value=\"Place a bet\" class=\"btn btn-outline-info custombutton\" [disabled]=\"isBetDisabled\" (click)=\"bet()\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between\" *ngFor=\"let bot of game.bots\">\r\n                    {{ bot.name }} <span> {{ bot.points }} </span>\r\n                </li>\r\n                <li class=\"list-group-item list-group-item-info d-flex justify-content-between\">\r\n                    {{ game.human.name }} <span> {{ game.human.points }} </span>\r\n                </li>\r\n            </ul>\r\n            <h3>Cards in deck: {{ game.deck.length }}</h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-md-2\" *ngFor=\"let bot of game.bots\">\r\n            <h3>\r\n                {{ bot.name }}\r\n            </h3>\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item\" *ngFor=\"let card of bot.hand.cardList\">\r\n                    {{ card.title }} of {{ card.color }}\r\n                </li>\r\n            </ul>\r\n            <h4 *ngIf=\"bot.hand.cardListValue != 0\">Value: {{ bot.hand.cardListValue }}</h4>\r\n            <h4 *ngIf=\"bot.hand.betValue != 0\">Bet: {{ bot.betValue }}</h4>\r\n        </div>\r\n\r\n        <div class=\"col-md-2\">\r\n            <h3>\r\n                {{ game.human.name }}\r\n            </h3>\r\n\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item\" *ngFor=\"let card of game.human.hand.cardList\">\r\n                    {{ card.title }} of {{ card.color }}\r\n                </li>\r\n            </ul>\r\n            <h4 *ngIf=\"game.human.hand.cardListValue != 0\">Value: {{ game.human.hand.cardListValue }}</h4>\r\n            <h4 *ngIf=\"game.human.hand.betValue != 0\">Bet: {{ game.human.betValue }}</h4>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\nimport { GameService } from 'src/game/game.service';\r\nimport { MessageService } from 'src/message/message.service';\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    styleUrls: ['/Content/bootstrap.css', '/Content/Site.css'],\r\n    templateUrl: '/src/game/game.component.html'\r\n})\r\n\r\nexport class GameComponent implements OnInit {\r\n    betValue = 10;\r\n    game: any;\r\n    humanId: any;\r\n    isDrawDisabled = false;\r\n    isBetDisabled = false;\r\n\r\n    constructor(private gameService: GameService, private route: ActivatedRoute, private router: Router, private messageService: MessageService) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.humanId = params['id'];\r\n        });\r\n        this.getGame();\r\n    }\r\n\r\n    getGame(): void {\r\n        this.gameService.getGame(this.humanId).subscribe(\r\n            game => {\r\n                this.game = game;\r\n                this.checkGameStatus();\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n                this.router.navigate([`login`]);\r\n            });\r\n    }\r\n\r\n    stand(): void {\r\n        this.gameService.stand(this.game.human.id).subscribe(\r\n            game => {\r\n                this.game = game;\r\n                this.disableDraw();\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            });\r\n    }\r\n\r\n    draw(): void {\r\n        this.gameService.draw(this.game.human.id).subscribe(\r\n            game => {\r\n                this.game = game;\r\n                this.checkGameStatus();\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            });\r\n    }\r\n\r\n    bet(): void {\r\n        this.gameService.bet(this.game.human.id, this.betValue).subscribe(\r\n            game => {\r\n                this.game = game;\r\n                this.disableBet();\r\n                this.checkGameStatus();\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            });\r\n    }\r\n\r\n    disableDraw(): void {\r\n        this.isDrawDisabled = true;\r\n        this.isBetDisabled = false;\r\n        this.betValue = 10;\r\n    }\r\n\r\n    disableBet(): void {\r\n        this.isDrawDisabled = false;\r\n        this.isBetDisabled = true;\r\n    }\r\n\r\n    checkGameStatus(): void {\r\n        if (this.game.human.cardListValue >= 21) {\r\n            this.disableDraw();\r\n        }\r\n\r\n        if (this.game.human.betValue == 0) {\r\n            this.disableDraw();\r\n        }\r\n\r\n        if (this.game.dealer.cardListValue == 21) {\r\n            this.disableDraw();\r\n        }\r\n\r\n        if ((this.game.human.hand.cardList.length != 0)\r\n            && (this.game.human.betValue != 0)) {\r\n            this.disableBet();\r\n        }\r\n    }\r\n}","﻿import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/shared.module';\r\nimport { GameRoutingModule } from 'src/game/game-routing.module';\r\n\r\nimport { GameComponent } from 'src/game/game.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        GameRoutingModule\r\n    ],\r\n    declarations: [\r\n        GameComponent\r\n    ]\r\n})\r\n\r\nexport class GameModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { Game } from 'src/game/models/game';\r\n\r\nimport { environment } from 'src/environment';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class GameService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getGame(id: number): Observable<Game> {\r\n        var getGameUrl = environment.gameUrl + `GetGameViewModel/${id}`;\r\n        return this.http.get<Game>(getGameUrl);\r\n    }\r\n\r\n    stand(id: number): Observable<Game> {\r\n        var standUrl = environment.gameUrl + \"Stand\";\r\n        return this.http.post<Game>(standUrl, id, httpOptions);\r\n    }\r\n\r\n    draw(id: number): Observable<Game> {\r\n        var drawUrl = environment.gameUrl + \"Draw\";\r\n        return this.http.post<Game>(drawUrl, id, httpOptions);\r\n    }\r\n\r\n    bet(id: number, betValue: number): Observable<Game> {\r\n        var betViewModel = {\r\n            betValue: betValue,\r\n            humanId: id\r\n        };\r\n        var drawUrl = environment.gameUrl + \"Bet\";\r\n        return this.http.post<Game>(drawUrl, betViewModel, httpOptions);\r\n    }\r\n}\r\n","﻿import { Routes, RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { LogComponent } from \"src/log/log.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LogComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class LogRoutingModule { }","<kendo-grid [data]=\"gridData\"\r\n            [pageSize]=\"state.take\"\r\n            [skip]=\"state.skip\"\r\n            [pageable]=\"true\"\r\n            [sortable]=\"true\"\r\n            [filterable]=\"true\"\r\n            (dataStateChange)=\"dataStateChange($event)\">\r\n\r\n    <kendo-grid-column field=\"GameId\" title=\"GameId\" width=\"20%\" filter=\"numeric\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column field=\"PlayerId\" title=\"PlayerId\" width=\"20%\" filter=\"numeric\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column field=\"Message\" title=\"Message\" width=\"40%\">\r\n    </kendo-grid-column>\r\n    <kendo-grid-column field=\"Time\" title=\"Time\" width=\"20%\" filter=\"date\" format=\"{0:dd.MM.yyyy HH:mm:ss}\">\r\n    </kendo-grid-column>\r\n\r\n</kendo-grid>","﻿import { Component } from '@angular/core';\r\n\r\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';\r\n\r\nimport { LogService } from 'src/log/log.service';\r\nimport { MessageService } from 'src/message/message.service';\r\n\r\n@Component({\r\n    selector: 'app-log',\r\n    styleUrls: ['/Content/bootstrap.css', '/Content/Site.css'],\r\n    templateUrl: '/src/log/log.component.html'\r\n})\r\n\r\nexport class LogComponent {\r\n    gridData: GridDataResult;\r\n    data: any[];\r\n    state: State = {\r\n        skip: 0,\r\n        take: 12,\r\n    };\r\n\r\n    constructor(private logService: LogService, private messageService: MessageService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadLogs();\r\n    }\r\n\r\n    public dataStateChange(state: DataStateChangeEvent): void {\r\n        this.state = state;\r\n        this.gridData = process(this.data, this.state);\r\n    }\r\n\r\n    loadLogs(): void {\r\n        this.logService.loadLogs().subscribe(\r\n            data => {\r\n                this.data = data;\r\n                this.data.forEach(item => item.Time = new Date(item.Time));\r\n                this.gridData = process(this.data, this.state);\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            }\r\n        )\r\n    \r\n    }\r\n}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { SharedModule } from 'src/shared.module';\r\nimport { LogRoutingModule } from 'src/log/log-routing.module';\r\n\r\nimport { LogComponent } from 'src/log/log.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        LogRoutingModule,\r\n        GridModule\r\n    ],\r\n    declarations: [\r\n        LogComponent\r\n    ]\r\n})\r\n\r\nexport class LogModule { }","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environment';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class LogService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    loadLogs(): Observable<any> {\r\n        var loadLogUrl = environment.logUrl + `GetLogs`;\r\n        return this.http.get<any>(loadLogUrl);\r\n    }\r\n}\r\n","﻿import { Routes, RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { LoginComponent } from \"src/login/login.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class LoginRoutingModule { }","<div class=\"row\">\r\n    <div class=\"col-md-4 offset-md-4 text-center\">\r\n        <h3>Input your name</h3>\r\n        <input type=\"text\" [(ngModel)]=\"name\" class=\"text-center form-control m-auto\" />\r\n        <h3>Choose bots amount</h3>\r\n        <input type=\"range\" class=\"custom-range\" min=\"0\" step=\"1\" max=\"5\" [(ngModel)]=\"botsAmount\" />\r\n\r\n        <input type=\"number\" class=\"text-center form-control m-auto\" [value]=\"botsAmount\" readonly=\"readonly\" />\r\n\r\n        <input type=\"submit\" value=\"Start a new game\" class=\"btn btn-outline-primary custombutton\" (click)=\"startGame()\" />\r\n        <h3>or</h3>\r\n        <input type=\"submit\" value=\"Load last game\" class=\"btn btn-outline-info custombutton\" (click)=\"loadGame()\" />\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from 'src/login/login.service';\r\nimport { MessageService } from 'src/message/message.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    styleUrls: ['/Content/bootstrap.css', '/Content/Site.css'],\r\n    templateUrl: '/src/login/login.component.html'\r\n})\r\n\r\nexport class LoginComponent {\r\n    name: any;\r\n    humanId: any;\r\n    botsAmount = 3;\r\n\r\n    constructor(private loginService: LoginService, private router: Router, private messageService: MessageService) { }\r\n\r\n    startGame(): void {\r\n        this.loginService.startGame(this.name, this.botsAmount).subscribe(\r\n            humanId => {\r\n                this.router.navigate([`game/${humanId}`]);\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            }\r\n        )\r\n    }\r\n\r\n    loadGame(): void {\r\n        this.loginService.loadGame(this.name).subscribe(\r\n            humanId => {\r\n                this.router.navigate([`game/${humanId}`]);\r\n            },\r\n            response => {\r\n                this.messageService.showError(response);\r\n            }\r\n        )\r\n    }\r\n}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/shared.module';\r\nimport { LoginRoutingModule } from 'src/login/login-routing.module';\r\n\r\nimport { LoginComponent } from 'src/login/login.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        LoginRoutingModule\r\n    ],\r\n    declarations: [\r\n        LoginComponent\r\n    ]\r\n})\r\n\r\nexport class LoginModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environment';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class LoginService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    startGame(playerName: string, botsAmount: number): Observable<number> {\r\n        var loginViewModel = {\r\n            playerName: playerName,\r\n            botsAmount: botsAmount\r\n        }\r\n\r\n        var startGameUrl = environment.loginUrl + \"StartGame\";\r\n        return this.http.post<number>(startGameUrl, loginViewModel, httpOptions);\r\n    }\r\n\r\n    loadGame(playerName: string): Observable<number> {\r\n        if (playerName == undefined) {\r\n            playerName = \"\";\r\n        }\r\n        var loadGameUrl = environment.loginUrl + `LoadGame?playerName=${playerName}`;\r\n        return this.http.get<number>(loadGameUrl);\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from 'src/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","<ng-template #content>\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"errorModalLabel\">Error</h5>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h1 class=\"alert alert-danger text-center\">\r\n            <span>\r\n                {{ messageService.errorMessage }}\r\n            </span>\r\n        </h1>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <p>You can try to refresh page to solve your problem. If it didn't help, say to Alexa play despacito 5.</p>\r\n    </div>\r\n</ng-template>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { MessageService } from 'src/message/message.service';\r\n\r\n@Component({\r\n    selector: 'app-error-message',\r\n    templateUrl: '/src/message/message.component.html',\r\n    styleUrls: ['/Content/bootstrap.css', '/Content/Site.css']\r\n})\r\n\r\nexport class MessageComponent implements OnInit {\r\n\r\n    @ViewChild('content') content: ElementRef;\r\n    \r\n    constructor(public messageService: MessageService) { }\r\n\r\n    ngOnInit() {\r\n        this.messageService.content = this.content;\r\n    }\r\n}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/shared.module';\r\n\r\nimport { MessageComponent } from 'src/message/message.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        MessageComponent\r\n    ],\r\n    exports: [\r\n        MessageComponent\r\n    ]\r\n})\r\n\r\nexport class MessageModule { }","﻿import { Injectable } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService {\r\n    errorMessage: any;\n    content: any;\n\n    constructor(private modalService: NgbModal) { }\n\n    showError(message: any): void {\n        this.errorMessage = message.error.Message;\n        this.modalService.open(this.content);\n    }\r\n}\r\n","﻿import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [CommonModule, FormsModule]\r\n})\r\nexport class SharedModule { } "],"sourceRoot":""}